name: Build and Release

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags: [v*]
    paths-ignore:
      - "**/*.md"
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build for ${{ matrix.target.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - { os: linux, arch: 386, name: linux-386 }
          - { os: linux, arch: amd64, name: linux-amd64 }
          - { os: linux, arch: arm, name: linux-arm }
          - { os: linux, arch: arm64, name: linux-arm64 }
          - { os: linux, arch: riscv64, name: linux-riscv64 }
          - { os: darwin, arch: amd64, name: macos-amd64 }
          - { os: darwin, arch: arm64, name: macos-arm64 }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        id: go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Build for ${{ matrix.target.name }}
        run: |
          VERSION=$(git describe --always --tags --match "v*" --dirty="-dev")
          CGO_ENABLED=0 GOOS=${{ matrix.target.os }} GOARCH=${{ matrix.target.arch }} go build -trimpath -ldflags="-w -s -X main.Version=${VERSION}" -o estkme-cloud-${{ matrix.target.name }}

      - name: Upload ${{ matrix.target.name }} to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: estkme-cloud-${{ matrix.target.name }}
          path: estkme-cloud-${{ matrix.target.name }}

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v5
        with:
          merge-multiple: true
          pattern: "*"

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: "*"
